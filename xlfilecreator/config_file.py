import pandas as pd
import xlsxwriter

from .formats import format_dict, format_lock_config_dict


MAIN = {0: {0: 'CONFIG_MANAGER', 1: 'header_format', 2: 'column_width', 3: 'lock_sheet_config', 4: 'description_header', 5: 'HEADER', 6: 'example_row'}, 1: {0: '"=ArrayFormula(if(offset(B1:1,match("HEADER",A:A,0)-1,0)="","",column(offset(B1:1,match("HEADER",A:A,0)-1,0))-2))', 1: 'rsr_format_4', 2: '25', 3: 'lock', 4: '"=ARRAYFORMULA(IMPORT_FILE!A1:AW)', 5: '', 6: ''}, 2: {0: '', 1: 'rsr_format_5', 2: '25', 3: 'lock', 4: '', 5: '', 6: ''}, 3: {0: '', 1: 'rsr_format_6', 2: '25', 3: 'unlocked_text', 4: '', 5: '', 6: ''}, 4: {0: '', 1: 'rsr_format_7', 2: '25', 3: 'unlocked_text', 4: '', 5: '', 6: ''}, 5: {0: '', 1: 'rsr_format_8', 2: '25', 3: 'unlocked_text', 4: '', 5: '', 6: ''}, 6: {0: '', 1: 'rsr_format_9', 2: '25', 3: 'unlocked_text', 4: '', 5: '', 6: ''}, 7: {0: '', 1: 'rsr_format_0', 2: '25', 3: 'unlocked_text', 4: '', 5: '', 6: ''}, 8: {0: '', 1: 'rsr_format_1', 2: '25', 3: 'unlocked_text', 4: '', 5: '', 6: ''}, 9: {0: '', 1: 'rsr_format_2', 2: '25', 3: 'unlocked_text', 4: '', 5: '', 6: ''}, 10: {0: '', 1: 'rsr_format_3', 2: '25', 3: 'unlocked_text', 4: '', 5: '', 6: ''}, 11: {0: '', 1: 'rsr_format_4', 2: '25', 3: 'unlocked_text', 4: '', 5: '', 6: ''}, 12: {0: '', 1: 'rsr_format_5', 2: '25', 3: 'unlocked_text', 4: '', 5: '', 6: ''}, 13: {0: '', 1: 'rsr_format_6', 2: '25', 3: 'unlocked_text', 4: '', 5: '', 6: ''}, 14: {0: '', 1: 'rsr_format_7', 2: '25', 3: 'unlocked_text', 4: '', 5: '', 6: ''}, 15: {0: '', 1: 'rsr_format_8', 2: '25', 3: 'unlocked_text', 4: '', 5: '', 6: ''}, 16: {0: '', 1: 'rsr_format_7', 2: '40', 3: 'unlocked_text', 4: '', 5: '', 6: ''}, 17: {0: '', 1: 'rsr_format_13', 2: '25', 3: 'unlocked_text', 4: '', 5: '', 6: ''}, 18: {0: '', 1: 'rsr_format_7', 2: '25', 3: 'unlocked_text', 4: '', 5: '', 6: ''}, 19: {0: '', 1: 'rsr_format_13', 2: '25', 3: 'unlocked_text', 4: '', 5: '', 6: ''}, 20: {0: '', 1: 'rsr_format_7', 2: '25', 3: 'unlocked_text', 4: '', 5: '', 6: ''}, 21: {0: '', 1: 'rsr_format_13', 2: '25', 3: 'unlocked_text', 4: '', 5: '', 6: ''}, 22: {0: '', 1: 'rsr_format_7', 2: '25', 3: 'unlocked_dollars', 4: '', 5: '', 6: ''}, 23: {0: '', 1: 'rsr_format_13', 2: '25', 3: 'locked_percent', 4: '', 5: '', 6: ''}, 24: {0: '', 1: 'rsr_format_7', 2: '25', 3: 'unlocked_dollars', 4: '', 5: '', 6: ''}}
df_main = pd.DataFrame(MAIN)

ROOT = {0: {0: '', 1: 'Current Work Order ID', 2: 'ABCWO0000XXXX', 3: 'ABCWO00008134', 4: 'ABCWO00007523', 5: 'ABCWO00008133', 6: 'ABCWO00009763', 7: 'ABCWO00009877', 8: 'ABCWO00010401', 9: 'ABCWO00008857', 10: 'ABCWO00009381', 11: 'ABCWO00010232', 12: 'ABCWO00010386', 13: 'ABCWO00010528', 14: 'ABCWO00009305', 15: 'ABCWO00010660', 16: 'ABCWO00010661', 17: 'ABCWO00009662', 18: 'ABCWO00010297', 19: 'ABCWO00010850'}, 1: {0: '', 1: 'Supplier', 2: 'Supplier ABC', 3: 'Black Diamond Networks', 4: 'Talentburst, Inc', 5: 'Black Diamond Networks', 6: 'Modis Inc.', 7: 'Talentburst, Inc', 8: 'inSync Staffing Inc.', 9: 'Talentburst, Inc', 10: 'Black Diamond Networks', 11: 'Talentburst, Inc', 12: 'inSync Staffing Inc.', 13: 'inSync Staffing Inc.', 14: 'inSync Staffing Inc.', 15: 'Modis Inc.', 16: 'Modis Inc.', 17: 'Talentburst, Inc', 18: 'Talentburst, Inc', 19: 'Modis Inc.'}, 2: {0: 'Text', 1: 'Worker Email', 2: 'worker_email&email.com', 3: 'worker1@email.com', 4: 'worker2@email.com', 5: 'worker3@email.com', 6: 'worker4@email.com', 7: 'worker5@email.com', 8: 'worker6@email.com', 9: 'worker7@email.com', 10: 'worker8@email.com', 11: 'worker9@email.com', 12: 'worker10@email.com', 13: 'worker11@email.com', 14: 'worker12@email.com', 15: 'worker13@email.com', 16: 'worker14@email.com', 17: 'worker15@email.com', 18: 'worker16@email.com', 19: 'worker17@email.com'}, 3: {0: 'Text', 1: 'First Name', 2: 'Scottie', 3: 'Ahmed', 4: 'Tanya', 5: 'Vladimir', 6: 'Tamicia', 7: 'Angela', 8: 'Richard', 9: 'Brett', 10: 'Ambra', 11: 'Perish', 12: 'Ernest', 13: 'Renata', 14: 'Nicole', 15: 'Glen', 16: 'Robert', 17: 'George', 18: 'Robert', 19: 'Sean'}, 4: {0: 'Text', 1: 'Last Name', 2: 'Smith', 3: "O'keefe", 4: 'Churchman', 5: 'Mattison', 6: 'Scarbrough', 7: 'Swims', 8: 'Lane', 9: 'Davis', 10: 'Robinson', 11: 'Bolden', 12: 'Brown', 13: 'Johnson', 14: 'Gregory', 15: 'Evans', 16: 'Coleman', 17: 'Pollard', 18: 'Marshall', 19: 'Mohammed'}, 5: {0: 'Dropdown', 1: 'ACTIVE WORKER?', 2: 'Yes', 3: 'Yes', 4: 'Yes', 5: 'LEAVER', 6: 'Yes', 7: 'Yes', 8: 'Yes', 9: 'Yes', 10: 'LEAVER', 11: 'Yes', 12: 'Yes', 13: 'Yes', 14: 'Yes', 15: 'Yes', 16: 'Yes', 17: 'Yes', 18: 'Yes', 19: 'Yes'}, 6: {0: 'Dropdown', 1: 'Worker Month of Birth', 2: '8', 3: '4', 4: '2', 5: '8', 6: '3', 7: '9', 8: '3', 9: '1', 10: '11', 11: '12', 12: '8', 13: '2', 14: '', 15: '7', 16: '8', 17: '9', 18: '9', 19: '3'}, 7: {0: 'Dropdown', 1: 'Worker Day of Birth', 2: '27', 3: '10', 4: '23', 5: '27', 6: '14', 7: '13', 8: '29', 9: '12', 10: '7', 11: '25', 12: '16', 13: '20', 14: '', 15: '1', 16: '5', 17: '9', 18: '14', 19: '26'}, 8: {0: 'Text', 1: 'Worker Address Line 1', 2: '', 3: '', 4: '', 5: '', 6: '', 7: '', 8: '', 9: '', 10: '', 11: '', 12: '', 13: '', 14: '', 15: '', 16: '', 17: '', 18: '', 19: ''}, 9: {0: 'Text', 1: 'Worker Address Line 2', 2: '', 3: '', 4: '', 5: '', 6: '', 7: '', 8: '', 9: '', 10: '', 11: '', 12: '', 13: '', 14: '', 15: '', 16: '', 17: '', 18: '', 19: ''}, 10: {0: 'Dropdown', 1: 'Is the candidate working on a H1B visa?', 2: 'No', 3: 'No', 4: 'No', 5: 'No', 6: 'No', 7: 'No', 8: 'No', 9: 'No', 10: 'No', 11: 'No', 12: 'No', 13: 'No', 14: '', 15: 'No', 16: 'No', 17: 'No', 18: 'No', 19: 'No'}, 11: {0: 'Dropdown', 1: 'Is H1B Visa directly held by supplier sponsorship?', 2: 'N/A', 3: 'No', 4: 'N/A', 5: 'No', 6: 'N/A', 7: 'N/A', 8: 'N/A', 9: 'N/A', 10: 'No', 11: 'N/A', 12: 'N/A', 13: 'N/A', 14: '', 15: 'N/A', 16: 'No', 17: 'N/A', 18: 'N/A', 19: 'N/A'}, 12: {0: 'Dropdown', 1: 'Candidate eligible to work in the US without employer sponsorship?', 2: 'N/A', 3: 'Yes', 4: 'Yes', 5: 'Yes', 6: 'Yes', 7: 'Yes', 8: 'N/A', 9: 'Yes', 10: 'Yes', 11: 'Yes', 12: 'N/A', 13: 'N/A', 14: '', 15: 'Yes', 16: 'Yes', 17: 'Yes', 18: 'Yes', 19: 'Yes'}, 13: {0: 'Date (MM/DD/YYYY)', 1: 'Current Assignment Original Start Date', 2: '04/30/2022', 3: '05/07/2022', 4: '08/01/2022', 5: '12/15/2021', 6: '04/02/2022', 7: '04/24/2022', 8: '05/01/2022', 9: '11/13/2021', 10: '08/09/2021', 11: '12/08/2021', 12: '02/07/2022', 13: '04/25/2022', 14: '', 15: '11/27/2021', 16: '05/31/2022', 17: '08/29/2022', 18: '01/21/2022', 19: '01/01/2022'}, 14: {0: 'Date (MM/DD/YYYY)', 1: 'Current Assignment End Date', 2: '11/23/2022', 3: '11/12/2022', 4: '12/31/2022', 5: '06/01/2022', 6: '07/30/2022', 7: '09/26/2022', 8: '12/31/2022', 9: '07/31/2022', 10: '06/13/2022', 11: '11/20/2022', 12: '01/03/2023', 13: '04/10/2023', 14: '', 15: '07/01/2022', 16: '02/25/2023', 17: '12/31/2022', 18: '09/22/2022', 19: '08/01/2022'}, 15: {0: 'Dropdown', 1: 'Worker Pay Type Name', 2: 'W2', 3: 'W2', 4: '1099', 5: 'W2', 6: 'W2', 7: 'W2', 8: '1099', 9: 'W2', 10: 'W2', 11: 'W2', 12: 'W2', 13: 'W2', 14: '', 15: '1099', 16: 'W2', 17: 'W2', 18: 'W2', 19: 'W2'}, 16: {0: 'Dropdown', 1: 'Notice Period', 2: 'N/A', 3: 'N/A', 4: 'N/A', 5: '', 6: '2 weeks', 7: 'N/A', 8: 'N/A', 9: 'N/A', 10: '', 11: 'N/A', 12: 'N/A', 13: 'N/A', 14: '', 15: '2 weeks', 16: 'N/A', 17: 'N/A', 18: 'N/A', 19: '1 month'}, 17: {0: 'Dropdown', 1: 'Remote worker?', 2: 'Yes', 3: 'Yes', 4: 'No', 5: 'No', 6: 'Yes', 7: 'No', 8: 'Yes', 9: 'No', 10: 'Yes', 11: 'No', 12: 'Yes', 13: 'Yes', 14: '', 15: 'No', 16: 'No', 17: 'Yes', 18: 'No', 19: 'No'}, 18: {0: 'Dropdown, If the worker is a remote worker, please specify the State in which he/she is based.', 1: 'State in which the worker is based', 2: 'MD - Maryland', 3: 'IA - Iowa', 4: '', 5: '', 6: 'MN - Minnesota', 7: '', 8: 'TX - Texas', 9: '', 10: 'NY - New York', 11: '', 12: '', 13: '', 14: '', 15: 'TN - Tennessee', 16: '', 17: 'FL - Florida', 18: '', 19: ''}, 19: {0: 'Text (optional)', 1: 'Supplier comment', 2: '', 3: '', 4: '', 5: '', 6: 'Original Start 10/25/21', 7: '', 8: '', 9: '', 10: '', 11: '', 12: '', 13: '', 14: '', 15: '', 16: '', 17: 'Flex role. Remote and onsite', 18: '', 19: ''}, 20: {0: 'Hourly', 1: 'Rate type', 2: 'Hourly', 3: 'Hourly', 4: 'Daily', 5: 'Hourly', 6: 'Hourly', 7: 'Hourly', 8: 'Daily', 9: 'Hourly', 10: 'Hourly', 11: 'Hourly', 12: 'Hourly', 13: 'Hourly', 14: '', 15: 'Hourly', 16: 'Hourly', 17: 'Hourly', 18: 'Hourly', 19: 'Hourly'}, 21: {0: 'Amount', 1: 'Standard Pay Rate', 2: '$40.00', 3: '100', 4: '360', 5: '84', 6: '61.76', 7: '27.5', 8: '200', 9: '33', 10: '72', 11: '40', 12: '22', 13: '22', 14: '', 15: '121.44', 16: '56', 17: '37', 18: '47', 19: '136.94'}, 22: {0: 'Percentage %', 1: 'Supplier markup % on standard Pay Rate', 2: '10.00%', 3: '', 4: '', 5: '', 6: '', 7: '', 8: '', 9: '', 10: '', 11: '', 12: '', 13: '', 14: '', 15: '', 16: '', 17: '', 18: '', 19: ''}, 23: {0: 'Amount', 1: 'Standard Supplier Bill Rate', 2: '$44.00', 3: '158.00', 4: '', 5: '112.00', 6: '95.99', 7: '39.28', 8: '', 9: '44.69', 10: '114.64', 11: '62.47', 12: '30.99', 13: '31.19', 14: '30.39', 15: '121.44', 16: '90.65', 17: '49.07', 18: '62.61', 19: '136.64'}}
df_impf = pd.DataFrame(ROOT)

DV = {0: {0: 'Index', 1: 'error_type', 2: 'input_title', 3: 'input_message', 4: 'error_title', 5: 'error_message', 6: 'HEADER', 7: '', 8: '', 9: '', 10: '', 11: '', 12: '', 13: '', 14: '', 15: '', 16: '', 17: '', 18: '', 19: '', 20: '', 21: '', 22: '', 23: '', 24: '', 25: '', 26: '', 27: '', 28: '', 29: '', 30: '', 31: '', 32: '', 33: '', 34: '', 35: '', 36: '', 37: '', 38: '', 39: '', 40: '', 41: '', 42: '', 43: '', 44: '', 45: '', 46: '', 47: '', 48: '', 49: '', 50: '', 51: '', 52: '', 53: '', 54: '', 55: '', 56: ''}, 1: {0: '"=ArrayFormula(if(offset(B1:1,match("HEADER",$A:$A,0)-1,0)="","",column(offset(B1:1,match("HEADER",$A:$A,0)-1,0))-2))', 1: '', 2: '', 3: '', 4: 'Worker Gender ERROR TITLE', 5: '', 6: 'Worker Gender', 7: 'Male', 8: 'Female', 9: 'Unknown', 10: '', 11: '', 12: '', 13: '', 14: '', 15: '', 16: '', 17: '', 18: '', 19: '', 20: '', 21: '', 22: '', 23: '', 24: '', 25: '', 26: '', 27: '', 28: '', 29: '', 30: '', 31: '', 32: '', 33: '', 34: '', 35: '', 36: '', 37: '', 38: '', 39: '', 40: '', 41: '', 42: '', 43: '', 44: '', 45: '', 46: '', 47: '', 48: '', 49: '', 50: '', 51: '', 52: '', 53: '', 54: '', 55: '', 56: ''}, 2: {0: '', 1: 'information', 2: '', 3: '', 4: '', 5: '', 6: 'Worker Pay Type Name', 7: 'W2', 8: '1099', 9: '', 10: '', 11: '', 12: '', 13: '', 14: '', 15: '', 16: '', 17: '', 18: '', 19: '', 20: '', 21: '', 22: '', 23: '', 24: '', 25: '', 26: '', 27: '', 28: '', 29: '', 30: '', 31: '', 32: '', 33: '', 34: '', 35: '', 36: '', 37: '', 38: '', 39: '', 40: '', 41: '', 42: '', 43: '', 44: '', 45: '', 46: '', 47: '', 48: '', 49: '', 50: '', 51: '', 52: '', 53: '', 54: '', 55: '', 56: ''}, 3: {0: '', 1: 'stop', 2: 'Active worker?', 3: 'Is this worker an active employee?', 4: '', 5: 'it must be an option from the picklist', 6: 'ACTIVE WORKER?', 7: 'Yes', 8: 'LEAVER', 9: '', 10: '', 11: '', 12: '', 13: '', 14: '', 15: '', 16: '', 17: '', 18: '', 19: '', 20: '', 21: '', 22: '', 23: '', 24: '', 25: '', 26: '', 27: '', 28: '', 29: '', 30: '', 31: '', 32: '', 33: '', 34: '', 35: '', 36: '', 37: '', 38: '', 39: '', 40: '', 41: '', 42: '', 43: '', 44: '', 45: '', 46: '', 47: '', 48: '', 49: '', 50: '', 51: '', 52: '', 53: '', 54: '', 55: '', 56: ''}, 4: {0: '', 1: 'stop', 2: '', 3: '', 4: '', 5: '', 6: 'Notice Period', 7: 'N/A', 8: '1 month', 9: '1 week', 10: '10 days', 11: '2 months', 12: '2 weeks', 13: '28 days', 14: '3 weeks', 15: '30 days', 16: '4 weeks', 17: '5 days', 18: '5 weeks', 19: '6 weeks', 20: '7 weeks', 21: '8 weeks', 22: '', 23: '', 24: '', 25: '', 26: '', 27: '', 28: '', 29: '', 30: '', 31: '', 32: '', 33: '', 34: '', 35: '', 36: '', 37: '', 38: '', 39: '', 40: '', 41: '', 42: '', 43: '', 44: '', 45: '', 46: '', 47: '', 48: '', 49: '', 50: '', 51: '', 52: '', 53: '', 54: '', 55: '', 56: ''}, 5: {0: '', 1: 'warning', 2: '', 3: '', 4: '', 5: '', 6: 'Remote worker?', 7: 'Yes', 8: 'No', 9: '', 10: '', 11: '', 12: '', 13: '', 14: '', 15: '', 16: '', 17: '', 18: '', 19: '', 20: '', 21: '', 22: '', 23: '', 24: '', 25: '', 26: '', 27: '', 28: '', 29: '', 30: '', 31: '', 32: '', 33: '', 34: '', 35: '', 36: '', 37: '', 38: '', 39: '', 40: '', 41: '', 42: '', 43: '', 44: '', 45: '', 46: '', 47: '', 48: '', 49: '', 50: '', 51: '', 52: '', 53: '', 54: '', 55: '', 56: ''}, 6: {0: '', 1: 'stop', 2: '', 3: '', 4: '', 5: '', 6: 'Rate type', 7: 'Daily', 8: 'Hourly', 9: '', 10: '', 11: '', 12: '', 13: '', 14: '', 15: '', 16: '', 17: '', 18: '', 19: '', 20: '', 21: '', 22: '', 23: '', 24: '', 25: '', 26: '', 27: '', 28: '', 29: '', 30: '', 31: '', 32: '', 33: '', 34: '', 35: '', 36: '', 37: '', 38: '', 39: '', 40: '', 41: '', 42: '', 43: '', 44: '', 45: '', 46: '', 47: '', 48: '', 49: '', 50: '', 51: '', 52: '', 53: '', 54: '', 55: '', 56: ''}, 7: {0: '', 1: 'warning', 2: '', 3: 'Select a State from the list', 4: 'What is the State of the Worker?', 5: '', 6: 'State in which the worker is based', 7: 'AL - Alabama', 8: 'AK - Alaska', 9: 'AZ - Arizona', 10: 'AR - Arkansas', 11: 'CA - California', 12: 'CO - Colorado', 13: 'CT - Connecticut', 14: 'DE - Delaware', 15: 'FL - Florida', 16: 'GA - Georgia', 17: 'HI - Hawaii', 18: 'ID - Idaho', 19: 'IL - Illinois', 20: 'IN - Indiana', 21: 'IA - Iowa', 22: 'KS - Kansas', 23: 'KY - Kentucky[D]', 24: 'LA - Louisiana', 25: 'ME - Maine', 26: 'MD - Maryland', 27: 'MA - Massachusetts[D]', 28: 'MI - Michigan', 29: 'MN - Minnesota', 30: 'MS - Mississippi', 31: 'MO - Missouri', 32: 'MT - Montana', 33: 'NE - Nebraska', 34: 'NV - Nevada', 35: 'NH - New Hampshire', 36: 'NJ - New Jersey', 37: 'NM - New Mexico', 38: 'NY - New York', 39: 'NC - North Carolina', 40: 'ND - North Dakota', 41: 'OH - Ohio', 42: 'OK - Oklahoma', 43: 'OR - Oregon', 44: 'PA - Pennsylvania[D]', 45: 'RI - Rhode Island', 46: 'SC - South Carolina', 47: 'SD - South Dakota', 48: 'TN - Tennessee', 49: 'TX - Texas', 50: 'UT - Utah', 51: 'VT - Vermont', 52: 'VA - Virginia[D]', 53: 'WA - Washington', 54: 'WV - West Virginia', 55: 'WI - Wisconsin', 56: 'WY - Wyoming'}}
df_dv = pd.DataFrame(DV)


def set_idx_format(workbook, worksheet, df):

    idx_format = workbook.add_format({'text_wrap':True, 'bold':True, 'italic':True, 'right':True})
    other_cols_format = workbook.add_format({'text_wrap':True})

    columns = iter(df.columns)
    col = next(columns)
    worksheet.set_column(col, col, width=17, cell_format=idx_format)
    for col in columns:
        worksheet.set_column(col, col, width=17, cell_format=other_cols_format)


def config_file():

    with pd.ExcelWriter('XlFileTemp_config_file.xlsx', engine='xlsxwriter') as writer:
        wb = writer.book

        ### FORMATS Sheet
        ws_format = wb.add_worksheet(name='FORMATS')
        ws_format.set_tab_color('#80ccff')
        for i, format_ in enumerate(format_dict.keys()):
            ws_format.write_string(i,0, format_, cell_format=eval(format_dict[format_]))
        ws_format.set_column(0, 0, width=12)

        column_formats = ['COLUMN FORMATS','unlocked_text','unlocked_dollars','unlocked_pounds','unlocked_euros','unlocked_percent']
        ws_format.write_column(0,1,column_formats)
        ws_format.set_column(1, 1, width=17)

        ### IMPORT_FILE Sheet
        df_impf.to_excel(writer,sheet_name='IMPORT_FILE', header=False, index=False)
        ws_root = writer.sheets['IMPORT_FILE']
        ws_root.set_tab_color('#0000ff')

        ### Dropdow_Lists sheet
        df_dv.to_excel(writer, sheet_name='Dropdown_Lists', header=False, index=False)
        ws_dv = writer.sheets['Dropdown_Lists']
        ws_dv.set_tab_color('#FF9900')

        set_idx_format(wb, ws_dv, df_dv)
        
        ws_dv.write_row('B7:AM7', df_dv.iloc[6,1:].tolist(), wb.add_format({'bold':1, 'text_wrap':1}))

        ws_dv.data_validation('A3:A100', {'validate': 'list', 'source': ['error_type','input_title','input_message','error_title','error_message','HEADER']})
        ws_dv.data_validation('B2:AM2', {'validate': 'list', 'source': ['stop','warning','information']})

        ### READ_SHEET
        df_main.to_excel(writer, sheet_name='READ_SHEET', header=False, index=False)
        ws_main = writer.sheets['READ_SHEET']
        ws_main.set_tab_color('#00ff00')

        set_idx_format(wb, ws_main, df_main)

        ws_main.data_validation('A5:A100', {'validate': 'list', 'source': ['description_header','HEADER','example_row']})
        ws_main.data_validation('B2:AM2', {'validate': 'list', 'source': f'=FORMATS!$A$1:$A${len(format_dict)}'})
        ws_main.data_validation('B4:AM4', {'validate': 'list', 'source': f'=FORMATS!$B$2:$B${len(format_lock_config_dict)}'})
        





